# telegram_bot/app/main.py
import asyncio
import logging

from telegram_bot.core.dispatcher import bot, dispatcher
from telegram_bot.core.router import setup_routers
from telegram_bot.services.text_service import preload_text_blocks
from telegram_bot.services.image_cache import preload_images
from telegram_bot.services.sheets_cache import sync_users_to_db_async
from telegram_bot.app.config import INTERVAL_SYNC

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s [%(levelname)s] %(name)s: %(message)s"
)
logger = logging.getLogger("PGB_BOT")


async def background_sync():
    """–§–æ–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets —Å –±–∞–∑–æ–π."""
    while True:
        try:
            logger.info("–ù–∞—á–∞–ª–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å Google Sheets...")
            # –ï—Å–ª–∏ force_reload=False, —Ñ—É–Ω–∫—Ü–∏—è load_all_from_sheets —Å–∞–º–∞ —Ä–µ—à–∏—Ç, —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∏—Å—Ö–æ–¥—è –∏–∑ —Ö—ç—à–∞.
            await sync_users_to_db_async(force_reload=False)
            logger.info("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        await asyncio.sleep(INTERVAL_SYNC)


async def main():
    # –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –±–ª–æ–∫–∏ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    await preload_text_blocks()
    await preload_images()

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–æ–Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    asyncio.create_task(background_sync())

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ä–æ—Å Telegram
    dispatcher.include_router(setup_routers())
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dispatcher.start_polling(bot)


if __name__ == "__main__":
    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        logger.info("‚õîÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
