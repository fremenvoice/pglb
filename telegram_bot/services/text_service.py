# telegram_bot/services/text_service.py

import os
import logging
import re

logger = logging.getLogger(__name__)

# –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å —Ç–µ–∫—Å—Ç–∞–º–∏
BASE_PATH = os.path.join(os.path.dirname(__file__), "..", "domain", "text_blocks")

# –û—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ä–æ–ª–µ–π
role_display_names = {
    "admin": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä",
    "consultant": "–ö–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç",
    "operator": "–û–ø–µ—Ä–∞—Ç–æ—Ä",
    "operator_rent": "–û–ø–µ—Ä–∞—Ç–æ—Ä –∞—Ä–µ–Ω–¥–∞—Ç–æ—Ä–∞"
}


def escape_markdown(text: str) -> str:
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã Telegram MarkdownV2.
    """
    escape_chars = r'([\\*_{}\[\]()#+\-.!])'
    return re.sub(escape_chars, r'\\\1', text)


def get_text_block(filename: str) -> str:
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ Markdown.
    """
    filepath = os.path.join(BASE_PATH, filename)
    if not os.path.isfile(filepath):
        logger.warning(f"‚ö†Ô∏è –¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω: {filename}")
        return f"‚ö†Ô∏è –ë–ª–æ–∫ —Ç–µ–∫—Å—Ç–∞ *{escape_markdown(filename)}* –Ω–µ –Ω–∞–π–¥–µ–Ω."

    logger.debug(f"üìñ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –±–ª–æ–∫–∞: {filename}")
    with open(filepath, "r", encoding="utf-8") as f:
        return f.read()


def render_welcome(full_name: str, role: str) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —à–∞–±–ª–æ–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è —Å –ø–æ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º –∏–º–µ–Ω–µ–º –∏ —Ä–æ–ª—å—é.
    """
    raw_template = get_text_block("welcome.md")
    role_display = role_display_names.get(role, role)

    # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è Markdown
    full_name_safe = escape_markdown(full_name)
    role_safe = escape_markdown(role_display)

    return raw_template.format(–§–ò–û=full_name_safe, role=role_safe)
